type Employee {
    employeeID: ID!
    firstName: String!
    lastName: String!
    birthDate: String
    hireDate: String
    title: String!
    titleOfCourtesy: String
    notes: String
    homePhone: String
    manager: Employee @relation(name: "REPORTS_TO", direction: "OUT")
    underlings: [Employee] @relation(name: "REPORTS_TO", direction: "IN")
    address: Address @relation(name: "LIVES_IN", direction: "OUT")
}

type Customer {
    customerID: ID!
    contactName: String!
    contactTitle: String
    companyName: String
    fax: String
    phone: String
    address: Address @relation(name: "LIVES_IN", direction: "OUT")
    orders: [Order] @relation(name: "PURCHASED", direction: "OUT")
}


type Order {
    orderID: ID!
    freight: Float
    employee: Employee @relation(name: "SOLD", direction: "IN")
    owner: Customer @relation(name: "PURCHASED", direction: "IN")
    elements: [Contains]
    shipName: String
    orderDate: String
    requiredDate: String
    shipping: ShippedTo
}

type ShippedTo @relation(name: "SHIPPED_TO") {
    from: Order
    to: Address
    shippedDate: String
}

type Contains @relation(name: "CONTAINS") {
    from: Order
    to: Product
    unitPrice: Float
    quantity: Float
}

type Supplier {
    companyName: String!
    supplierID: ID!
    contactName: String!
    contactTitle: String!
    address: Address @relation(name: "BASED_IN", direction: "OUT")
    fax: String
    phone: String
    homePage: String
}

type Address {
    region: String
    country: String!
    city: String
    postalCode: String
    address: String
}

type Category {
    categoryID: ID!
    categoryName: String!
    description: String!
    products: [Product] @relation(name: "PART_OF", direction: "IN")
}

type Product {
    productName: String!
    productID: ID!
    unitsInStock: Int!
    unitPrice: Float!
    quantityPerUnit: String
    supplier: Supplier @relation(name: "SUPPLIES", direction: "IN")
    category: Category @relation(name: "PART_OF", direction: "OUT")
}
